--Show customers who are not in the US
SELECT Customerid, CONCAT(FirstName, ' ', LastName) AS Customer_Name, Country
FROM chinook.customers
WHERE Country <> 'USA'
ORDER BY Country, LastName;

--Show only customer from Brazil
SELECT Customerid, CONCAT(FirstName, ' ', LastName) AS Customer_Name, Country
FROM chinook.customers
WHERE Country = 'Brazil'
ORDER BY Country, LastName;

--Find invoices of customers from Brazil
SELECT inv.invoiceid, cust.FirstName, cust.LastName, inv.invoiceDate, cust.Country
FROM chinook.customers cust
INNER JOIN chinook.invoices inv
ON cust.Customerid = inv.CustomerId
WHERE cust.Country = 'Brazil'
ORDER BY cust.Country, cust.LastName;

--Show employees who are Sales Agents
SELECT Employeeid, FirstName, LastName, Title
FROM chinook.employees
WHERE Title LIKE 'Sales Support Agent'
ORDER BY Title, LastName;

--Show all countries with invoices
SELECT DISTINCT cust.Country
FROM chinook.invoices inv
INNER JOIN chinook.customers cust
ON cust.CustomerID = inv.Customerid
ORDER BY Country;

--Show invoices associated with each sales agent
SELECT inv.invoiceid, inv.invoiceDate, emp.EmployeeID, CONCAT(emp.FirstName, ' ', emp.LastName) AS Sales_Agent
FROM chinook.invoices inv
INNER JOIN chinook.customers cust
ON inv.Customerid = cust.Customerid
INNER JOIN chinook.employees emp
ON cust.SupportRepid = emp.Employeeid
ORDER BY emp.LastName, invoiceid;

--Show invoice total, customer name, country, and sales agent for all invoices and customers
SELECT emp.LastName, emp.Firstname, cust.FirstName, cust.LastName, cust.Country, inv.total
FROM chinook.employees emp 
JOIN chinook.Customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv ON Inv.CustomerId = cust.CustomerId;

--How many invoices were there in 2009
SELECT *
FROM chinook.invoices
WHERE invoiceDate LIKE '%2009%';

--What are the total sales for 2009
SELECT SUM(Total) AS Total_Sales
FROM chinook.invoices
WHERE invoiceDate LIKE '%2009%';

--Purchased tract names and invoiceID
SELECT t.Name, i.InvoiceLineId
FROM chinook.Invoice_items i
INNER JOIN chinook.Tracks t 
ON i.TrackId = t.TrackId;

--Purchased tract names, artist name and invoiceID
SELECT t.Name, a.name, i.InvoiceLineId
FROM chinook.Invoice_items i
INNER JOIN chinook.Tracks t 
ON i.TrackId = t.TrackId
INNER JOIN chinook.albums alb
ON alb.Albumid = t.Albumid
INNER JOIN chinook.artists a
ON a.artistid = alb.artistid;

--Tracks, album name, media type and genre
SELECT t.Name AS 'Track Name', a.Title AS 'Album Title', m.Name AS 'Media Type', g.Name AS 'Genre'
FROM chinook.tracks t
JOIN chinook.Albums a 
on a.AlbumId = t.AlbumId
JOIN chinook.Media_Types m
on m.MediaTypeId = t.MediaTypeId
JOIN chinook.Genres g
on g.GenreId = t.GenreId;

--Total sales by Agent
SELECT emp.FirstName, emp.LastName, SUM(inv.total) AS Total_Sales
FROM chinook.invoices inv
INNER JOIN chinook.customers cust
ON inv.Customerid = cust.Customerid
INNER JOIN chinook.employees emp
ON emp.Employeeid = cust.SupportRepid
GROUP BY emp.Employeeid
ORDER BY Total_Sales;

--Which sales agent made the most money in sales in 2009
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp

JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId

JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId

WHERE emp.Title = 'Sales Support Agent' 
AND Inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2))  DESC LIMIT 1;
